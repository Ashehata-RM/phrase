version: '3.9'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
  readonly_user:
    image: postgres
    command: "postgres -c max_connections=200 -c shared_buffers=256MB -c max_wal_senders=3 -c wal_level=replica"
    environment:
      POSTGRES_USER: readonly
      POSTGRES_PASSWORD: readonlypassword
      POSTGRES_DB: mydb
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn myapp.wsgi:application -w 4 -b 0.0.0.0:8000
    environment:
      - DJANGO_SETTINGS_MODULE=myapp.settings
    volumes:
      - static_data:/code/static
      - media_data:/code/media
    depends_on:
      - db
    expose:
      - "8000"
  app2:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn myapp.wsgi:application -w 4 -b 0.0.0.0:8001
    environment:
      - DJANGO_SETTINGS_MODULE=myapp.settings
    volumes:
      - static_data:/code/static
      - media_data:/code/media
    depends_on:
      - db
    expose:
      - "8001"
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_data:/code/static
      - media_data:/code/media
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app1
      - app2
  certbot:
    image: certbot/certbot
    command: certonly --webroot --webroot-path=/var/www/html -d phrase.sofed.io
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
    depends_on:
      - nginx

volumes:
  pgdata:
  static_data:
  media_data:
